{"version":3,"sources":["HOC/withAuthRedirect.js","Styles/Dialogs.module.css","components/Dialogs.jsx","components/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","maxLength","maxLengthCreator","DialogUser","className","classes","contact","id","name","Message","message","AddMessageFormRedux","reduxForm","form","sendTools","onSubmit","handleSubmit","Field","component","Textarea","validate","required","postWindow","placeholder","btn","Dialogs","dialogsPage","dialogsArr","usersData","map","dialog","messagesArr","messagesData","item","dialogs","dialogs_wrapper","contacts","messages","value","sendMessage","newMessageText","compose","dispatch","sendMessageActionCreator"],"mappings":"0NAGIA,EAA6B,SAACC,GAAD,MAAY,CAACC,OAAQD,EAAME,KAAKD,SACpDE,EAAmB,SAACC,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADK,cAAC,IAAD,CAAUC,GAAI,eAHL,GACbC,IAAML,WAOtC,OADqCM,YAASX,EAATW,CAAsCL,K,oBCV7EM,EAAOC,QAAU,CAAC,gBAAkB,iCAAiC,QAAU,yBAAyB,QAAU,yBAAyB,QAAU,yBAAyB,SAAW,0BAA0B,SAAW,0BAA0B,UAAY,2BAA2B,WAAa,4BAA4B,IAAM,uB,qICK1UC,EAAYC,YAAkB,KAC5BC,EAAa,SAACR,GAClB,OAAO,qBAAKS,UAAWC,IAAQC,QAAxB,SACL,cAAC,IAAD,CAASV,GAAI,YAAcD,EAAMY,GAAjC,SAAsCZ,EAAMa,UAG1CC,EAAU,SAACd,GACf,OAAO,qBAAKS,UAAWC,IAAQK,QAAxB,SACJf,EAAMe,WAaLC,EAAsBC,YAAW,CAACC,KAAM,wBAAlBD,EAVL,SAACjB,GACtB,OACE,qBAAKY,GAAIF,IAAQS,UAAjB,SACE,uBAAMC,SAAUpB,EAAMqB,aAAtB,UACE,8BAAK,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUpB,GAAaM,GAAIF,IAAQiB,WAAYd,KAAM,iBAAkBe,YAAY,iBAC/H,8BAAK,wBAAQhB,GAAIF,IAAQmB,IAApB,4BA0BEC,EApBC,SAAC9B,GACf,IAAIP,EAAQO,EAAM+B,YACdC,EAAavC,EAAMwC,UAAUC,KAAK,SAAAC,GAAM,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAOtB,KAAMD,GAAKuB,EAAOvB,QACvFwB,EAAc3C,EAAM4C,aAAaH,KAAK,SAAAI,GAAI,OAAI,cAAC,EAAD,CAASvB,QAASuB,EAAKvB,QAASH,GAAK0B,EAAK1B,QAI5F,OAAO,sBAAKH,UAAWC,IAAQ6B,QAAxB,UACL,qEACA,sBAAK9B,UAAWC,IAAQ8B,gBAAxB,UACE,qBAAK/B,UAAWC,IAAQ+B,SAAxB,SACGT,IAEH,qBAAKvB,UAAWC,IAAQgC,SAAxB,SACE,8BAAMN,SAGV,cAACpB,EAAD,CAAqBI,SAbH,SAACuB,GACnB3C,EAAM4C,YAAYD,EAAME,uB,iBCdbC,sBAAS3C,aAZF,SAACV,GACrB,MAAO,CACLsC,YAAatC,EAAMsC,gBAGE,SAACgB,GACxB,MAAO,CACLH,YAAa,SAACC,GACZE,EAAUC,YAA0BH,SAI6BjD,IAAxDkD,CAA2EhB","file":"static/js/4.1a230e07.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth});\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render () {\r\n      if (!this.props.isAuth) {return <Redirect to={\"/login\"}/>}\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent);\r\n  return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_wrapper\":\"Dialogs_dialogs_wrapper__3vHSi\",\"dialogs\":\"Dialogs_dialogs__I4Fmt\",\"contact\":\"Dialogs_contact__LYqdH\",\"message\":\"Dialogs_message__z-ZeZ\",\"contacts\":\"Dialogs_contacts__1ZNUI\",\"messages\":\"Dialogs_messages__28pe8\",\"sendTools\":\"Dialogs_sendTools__3lJ5i\",\"postWindow\":\"Dialogs_postWindow__2DY6w\",\"btn\":\"Dialogs_btn__k-MSC\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport classes from '../Styles/Dialogs.module.css';\r\nimport { maxLengthCreator, required } from '../utils/validators/validator';\r\nimport { Textarea } from './General/FormControl';\r\nlet maxLength = maxLengthCreator (300);\r\nconst DialogUser = (props) => {\r\n  return <div className={classes.contact}>\r\n    <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n  </div>\r\n};\r\nconst Message = (props) => {\r\n  return <div className={classes.message}>\r\n    {props.message}\r\n  </div>\r\n};\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <div id={classes.sendTools}>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div><Field component={Textarea} validate={[required, maxLength,]} id={classes.postWindow} name={\"newMessageText\"} placeholder='Message...'/></div>\r\n        <div><button id={classes.btn}>Send</button></div>\r\n      </form>\r\n    </div> \r\n  )\r\n}\r\nconst AddMessageFormRedux = reduxForm ({form: 'dialogAddMessageForm'}) (AddMessageForm);\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n  let dialogsArr = state.usersData.map (dialog => <DialogUser name={dialog.name} id= {dialog.id}/>);\r\n  let messagesArr = state.messagesData.map (item => <Message message={item.message} id= {item.id}/>);\r\n  let addNewMessage = (value) => {\r\n    props.sendMessage(value.newMessageText);\r\n  }\r\n  return <div className={classes.dialogs}>\r\n    <p>Беседы</p>\r\n    <div className={classes.dialogs_wrapper}>\r\n      <div className={classes.contacts}>\r\n        {dialogsArr}\r\n      </div>\r\n      <div className={classes.messages}>\r\n        <div>{messagesArr}</div>\r\n      </div>\r\n    </div>\r\n    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n  </div>\r\n};\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {sendMessageActionCreator} from '../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from '../HOC/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageText) => {\r\n      dispatch (sendMessageActionCreator (newMessageText));\r\n    },\r\n  }\r\n}\r\nexport default compose (connect (mapStateToProps, mapDispatchToProps), withAuthRedirect) (Dialogs);"],"sourceRoot":""}