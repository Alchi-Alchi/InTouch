{"version":3,"sources":["HOC/withAuthRedirect.js","Styles/Profile.module.css","Styles/Photo.module.css","Styles/Name.module.css","Styles/ProfileStatus.module.css","Styles/Info.module.css","Styles/Content.module.css","Styles/Post.module.css","images/myAvatar.png","components/Photo.jsx","components/ProfileStatusHooks.jsx","components/Name.jsx","components/Info.jsx","components/Post.jsx","components/Content.jsx","components/ContentContainer.jsx","components/Profile.jsx","components/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Photo","className","classes","photo","src","avatar","alt","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","Name","nameAndStatus","id","name_content","Info","profile","info","item","Preloader","Post","post","message","maxLength","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","createPostWindow","createRef","sendTools","onSubmit","handleSubmit","Field","component","Textarea","postWindow","placeholder","ref","name","validate","required","btn","Content","memo","postsArr","myPosts","map","p","content","title","addPost","newPostText","ContentContainer","profilePage","dispatch","addPostActionCreator","Profile","store","ProfileContainer","userID","match","params","myUserID","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.42982be3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth});\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render () {\r\n      if (!this.props.isAuth) {return <Redirect to={\"/login\"}/>}\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent);\r\n  return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__29bCP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Photo_photo__2M9S8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameAndStatus\":\"Name_nameAndStatus__2BxiG\",\"name_content\":\"Name_name_content__3Ymu7\",\"status\":\"Name_status__1i4Rt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__387FA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Info_info__prvqF\",\"item\":\"Info_item__MDccu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__3p75z\",\"title\":\"Content_title__LCBfq\",\"sendTools\":\"Content_sendTools__2OF_V\",\"postWindow\":\"Content_postWindow__z2QQw\",\"btn\":\"Content_btn__3Vgtr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2vkeA\"};","export default __webpack_public_path__ + \"static/media/myAvatar.81ffb64f.png\";","import React from 'react';\r\nimport avatar from '../images/myAvatar.png';\r\nimport classes from '../Styles/Photo.module.css';\r\nconst Photo = () => {\r\n  return <div className={classes.photo}>\r\n    <img src={avatar} alt=\"avatar\" />\r\n  </div>\r\n};\r\nexport default Photo;","import React, { useState, useEffect } from 'react';\r\nimport classes from '../Styles/ProfileStatus.module.css';\r\nconst ProfileStatusHooks = (props) => {\r\n  let [editMode, setEditMode] = useState (false);\r\n  let [status, setStatus] = useState (props.status);\r\n  useEffect (() => {\r\n    setStatus (props.status);\r\n  }, [props.status]);\r\n  const activateMode = () => {\r\n    setEditMode (true);\r\n  };\r\n  const deactivateMode = () => {\r\n    setEditMode (false);\r\n    props.updateStatus (status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus (e.currentTarget.value)\r\n  };\r\n  return (\r\n    <div className={classes.status}>\r\n      {!editMode && <div><span onDoubleClick={activateMode}>{props.status || 'Установить статус'}</span></div>}\r\n      {editMode && <div><input autoFocus={true} onBlur={deactivateMode} onChange={onStatusChange} value={status}/></div>}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileStatusHooks;","import React from 'react';\r\nimport classes from '../Styles/Name.module.css';\r\nimport ProfileStatusHooks from './ProfileStatusHooks';\r\nconst Name = (props) => {\r\n  return <div className={classes.nameAndStatus}>\r\n    <div id={classes.name_content}><p>Call me Pawel</p></div>\r\n    <div id={classes.status}><ProfileStatusHooks status={props.status} updateStatus={props.updateStatus}/></div>\r\n  </div>\r\n};\r\nexport default Name;","import React from 'react';\r\nimport classes from '../Styles/Info.module.css';\r\nimport Preloader from './General/Preloader';\r\nconst Info = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader/>\r\n  }\r\n  return <div className={classes.info}>\r\n    <p id={classes.item}>Дата рождения:</p>\r\n    <p id={classes.item}>Страна:</p>\r\n    <p id={classes.item}>Город:</p>\r\n    <p id={classes.item}>Интересы:</p>\r\n    \r\n  </div>\r\n};\r\nexport default Info;","import React from 'react';\r\nimport classes from '../Styles/Post.module.css';\r\nconst Post = (props) => {\r\n  return <div className={classes.post}>\r\n    {props.message}\r\n  </div>\r\n};\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport classes from '../Styles/Content.module.css';\r\nimport { maxLengthCreator, required } from '../utils/validators/validator';\r\nimport { Textarea } from './General/FormControl';\r\nimport Post from './Post';\r\nlet maxLength = maxLengthCreator (300);\r\nconst AddNewPostForm = (props) => {\r\n  let createPostWindow = React.createRef();\r\n  return (\r\n    <div className={classes.sendTools}>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea} id={classes.postWindow} placeholder=\"Message...\" ref={createPostWindow} name={\"newPostText\"} validate={[required, maxLength, ]}/> <br/>\r\n        <button id={classes.btn}>Send</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nconst AddNewPostFormRedux = reduxForm ({form: \"profileAddPost\"}) (AddNewPostForm);\r\nconst Content = React.memo (props => {\r\n  let postsArr = props.myPosts.map (p => <Post message = {p.post}/>);\r\n  \r\n  let addPost = (value) => {\r\n    props.addPost (value.newPostText);\r\n  }\r\n  return (\r\n  <div className={classes.content}>\r\n    <div className={classes.title}>Messages</div>\r\n    {postsArr}\r\n    <AddNewPostFormRedux onSubmit={addPost}/>\r\n  </div>\r\n  );\r\n});\r\nexport default Content;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {addPostActionCreator} from '../redux/profileReducer'\r\nimport Content from './Content';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    myPosts: state.profilePage.myPosts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch (addPostActionCreator (newPostText));\r\n    },\r\n  }\r\n}\r\nconst ContentContainer = connect (mapStateToProps, mapDispatchToProps) (Content);\r\nexport default ContentContainer;","import React from 'react';\r\nimport classes from '../Styles/Profile.module.css';\r\nimport Photo from './Photo';\r\nimport Name from './Name';\r\nimport Info from './Info';\r\nimport ContentContainer from './ContentContainer';\r\nimport store from '../redux/reduxStore';\r\nconst Profile = (props) => {\r\n  return (\r\n  <div className={classes.profile}>\r\n    <Photo/>\r\n    <Name status={props.status} updateStatus={props.updateStatus}/>\r\n    <Info profile={props.profile}/>\r\n    <ContentContainer store={store}/>\r\n  </div>\r\n  );\r\n};\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { getUserProfile, getStatus, updateStatus } from '../redux/profileReducer';\r\nimport Profile from './Profile';\r\nimport { withAuthRedirect } from '../HOC/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount () {\r\n    let userID = this.props.match.params.userID;\r\n    if (!userID) {\r\n      userID = this.props.myUserID\r\n    }\r\n    this.props.getUserProfile (userID);\r\n    this.props.getStatus (userID);\r\n  }\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  myUserID: state.auth.userID,\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport default compose (connect (mapStateToProps, {getUserProfile, getStatus, updateStatus}), withRouter, withAuthRedirect) (ProfileContainer);"],"sourceRoot":""}